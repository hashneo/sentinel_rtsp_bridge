---
swagger: '2.0'
info:
  description: ''
  version: '0.0.1'
  title: 'data'
  termsOfService: ''
  contact:
    name: ''
    email: 'steven.taylor@me.com'
  license:
    name: 'Steven Taylor'
host: localhost
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json

securityDefinitions:
  Oauth:
    type: oauth2
    scopes:
      open: no security
      user: a user
    flow: implicit
    authorizationUrl: https://my_aouth/

security:
- Oauth: []

paths:
  /health:
    x-swagger-router-controller: health
    get:
      tags:
      - health
      operationId: health
      security:
      - Oauth:
        - open
      parameters:
      - in: query
        name: id
        type: string
      responses:
        200:
          description: health information
          schema:
            $ref: '#/definitions/Status'

        default:
          $ref: '#/responses/Error'

  /stream:
    x-swagger-router-controller: stream
    post:
      tags:
      - stream
      operationId: createStream
      security:
      - Oauth:
        - open
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/StreamSource'
      responses:
        200:
          description: stream information
          schema:
            $ref: '#/definitions/StreamInfo'
        default:
          $ref: '#/responses/Error'

  /stream/{id}/{type}:
    x-swagger-router-controller: stream
    delete:
      tags:
      - stream
      operationId: deleteStream
      security:
      - Oauth:
        - open
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: path
        name: type
        required: true
        type: string
        enum: [
          live,
          image
        ]
      responses:
        200:
          description: confirmation
          schema:
            type: object
        default:
          $ref: '#/responses/Error'

  /stream/{id}/{type}/*:
    x-swagger-router-controller: stream
    get:
      tags:
      - stream
      operationId: getStreamData
      security:
      - Oauth:
        - open
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: path
        name: type
        required: true
        type: string
        enum: [
          live,
          image
        ]
      responses:
        200:
          description: confirmation
          schema:
            type: object
        default:
          $ref: '#/responses/Error'

  /swagger:
    x-swagger-pipe: swagger_raw

responses:

  Error:
    description: error
    schema:
      $ref: '#/definitions/Error'

definitions:

  Error:
    required:
    - code
    - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  StreamSource:
    required:
    - source
    - type
    properties:
      source:
        type: string
      type:
        type: string
        enum: [
          live,
          image
        ]

  StreamInfo:
    required:
    - id
    - endpoint
    properties:
      id:
        type: string
      endpoint:
        type: string

  Status:
    type: object
    additionalProperties: false
    properties:
      status:
        type: string
